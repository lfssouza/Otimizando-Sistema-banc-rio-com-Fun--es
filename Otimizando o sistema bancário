def depositar (saldo, extrato):
    try:
        valor = float(input("Valor depositado: "))
    except ValueError:
        print("Favor inserir um valor válido")
        return saldo, extrato
    
    confirmar = input(f"Deseja depositar o valor: R${valor:.2f}? (S/N)\n").strip().upper()

    if confirmar == "S":
        if valor > 0:
            saldo += valor
            extrato += f"Depósito: R${valor:.2f}\n"
            print(f"Valor de R$ {valor:.2f}, foi depositado com sucesso!")
        else:
            print("Operação falhou: Valor invalido")
    else:
        print("Depósito cancelado")

    return saldo, extrato

def sacar (saldo, extrato, limite, numero_saques, limite_saques):
    if numero_saques >= limite_saques:
        print("Limite de saques diarios atingido!")
        return saldo, extrato, numero_saques
    
    if saldo <= 0:
        print("Saldo insuficiente!")
        return saldo, extrato, numero_saques
    
    try:
        valor = float(input("Valor que deseja sacar: "))
    except ValueError:
        print("favor informar um valor válido")
        return saldo, extrato, numero_saques
    
    confirmar = input(f"Deseja sacar o valor: R${valor:.2f}? (S/N)\n").strip().upper()

    if confirmar != "S":
        print("Saque cancelado")
        return saldo, extrato, numero_saques
    
    if valor > saldo:
        print("Valor acima do seu saldo")
    elif valor >= limite:
        print("Valor acima do limite de R$500")
    elif valor <= 0:
        print("Valor inválido")
    else:
        saldo -= valor
        extrato += f"Saque: R${valor:.2f}\n"
        numero_saques += 1
        print(f"Valor de R$ {valor:.2f}, foi sacado com sucesso!")
        return saldo, extrato, numero_saques
    
def exibir_extrato(saldo, extrato):
    print("\n ______________ * EXTRATO * ______________")
    if not extrato:
        print("Não foram realizadas movimentações.")
    else:
        print(extrato)
        print(f"Saldo atual da conta: R$ {saldo:.2f}")
        print("_________________________________________")

def criar_usuario(usuarios):
    cpf = input("Informe o CPF: ").strip()

    cpf = ''.join(filter(str.isdigit, cpf))

    if len(cpf) != 11:
        print("CPF inválido! Deve conter 11 dígitos numéricos")
        return
    
    usuario_existente = any(u["cpf"] == cpf for u in usuarios)

    if usuario_existente:
        print("CPF em uso")
        return
    
    nome = input("Informe o nome completo: ").strip()
    nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ").strip()
    endereco = input("Informe o endereço(logradouro, número - bairro - cidade/UF)").strip()

    usuarios.append({
        "cpf": cpf,
        "nome": nome,
        "nascimento": nascimento,
        "endereco": endereco
    })

    print("Usuário criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n Conta criada com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}
    
    print("Usuário não encontardo, fluxo de criação de conta encerrado!")

def listar_contas(contas):
    if not contas:
        print("\nNenhuma conta cadastrada.")
        return
    
    print("\n********* LISTA DE CONTAS *********")
    
    for conta in contas:
        usuario = conta["usuario"]
        print(f"""
        Agência: {conta['agencia']}
        Número da Conta: {conta['numero_conta']}
        Titular: {usuario['nome']} - CPF: {usuario['cpf']}
        """)
    print("***********************************")

usuarios = []
contas = []

menu = """

[1] Depositar
[2] Sacar
[3] Extrato
[4] Criar Usuário
[5] Criar Conta Corrente
[6] Listar Contas
[0] Sair


=> """

saldo = 0
limite = 501
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3
AGENCIA = "0001"

while True:
    opcao = input(menu)

    if opcao == "1":
        saldo, extrato = depositar(saldo, extrato)

    elif opcao == "2":
        saldo, extrato, numero_saques = sacar(
            saldo=saldo,
            extrato=extrato,
            limite=limite,
            numero_saques=numero_saques,
            limite_saques=LIMITE_SAQUES
        )

    elif opcao == "3":
        exibir_extrato(saldo, extrato)

    elif opcao == "4":
        criar_usuario(usuarios)

    elif opcao == "5":
        numero_conta = len(contas) + 1
        conta = criar_conta(AGENCIA, numero_conta, usuarios)

        if conta:
            contas.append(conta)

    elif opcao == "6":
        listar_contas(contas)

    elif opcao == "0":
        break

    else:
        print("Operação inválida, por favor selecionar uma opção existente.")